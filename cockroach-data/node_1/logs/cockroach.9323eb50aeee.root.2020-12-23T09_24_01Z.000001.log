I201223 09:24:01.739473 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 09:24:01
I201223 09:24:01.739479 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹9323eb50aeee›
I201223 09:24:01.739483 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 09:24:01.739487 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 09:24:01.739492 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 09:24:01.739359 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 09:24:01.739553 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 09:24:01.739748 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 09:24:01.739763 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 09:24:01.739894 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 09:24:01.739902 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 09:24:01.740250 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 09:24:01.740259 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 09:24:01.740268 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 09:24:01.740297 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 09:24:01.740306 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 09:24:01.742076 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 09:24:01.742102 1 cli/start.go:509 ⋮ starting cockroach node
I201223 09:24:01.754589 22 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 09:24:01.789005 22 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 09:24:01.789024 22 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 09:24:01.789030 22 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 09:24:01.790970 22 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"9323eb50aeee"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 09:24:01.791422 150 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"d3091e5a-847b-443c-863f-227832ed0a67"›
I201223 09:24:01.793469 22 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"9323eb50aeee:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608715441793462962 cluster_name:"" sql_address:<network_field:"tcp" address_field:"9323eb50aeee:26257" >›
I201223 09:24:01.798374 150 server/server.go:1419 ⋮ [n1] node connected via gossip
W201223 09:24:01.798433 22 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r32/1:‹/Table/3{6-7}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 09:24:01.798518 223 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 09:24:01.798586 22 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=163 GiB, used=496 KiB, logicalBytes=374 KiB), ranges=35, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=326.00 p90=5031.00 pMax=320410.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 09:24:01.798665 22 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 09:24:01.801402 22 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 09:24:01.801427 22 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 09:24:01.801469 22 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 09:24:01.801483 22 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 09:24:01.801496 22 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 09:24:01.801503 22 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 09:24:01.801515 22 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹9323eb50aeee:8080›)
I201223 09:24:01.801530 22 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 09:24:01.801543 22 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹9323eb50aeee:26257›
I201223 09:24:01.812506 22 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 09:24:01.812721 22 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 09:24:01.812739 22 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 09:24:01.812841 22 cli/start.go:670 ⋮ [config] clusterID: ‹d3091e5a-847b-443c-863f-227832ed0a67›
I201223 09:24:01.812868 22 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 09:24:01.812785233 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://9323eb50aeee:8080›
sql:                 ‹postgresql://root@9323eb50aeee:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=9323eb50aeee:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp631766265›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹d3091e5a-847b-443c-863f-227832ed0a67›
nodeID:              1
I201223 09:24:01.814334 261 jobs/job_scheduler.go:346 ⋮ [n1] waiting 3m0s before scheduled jobs daemon start
I201223 09:24:01.815112 247 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 09:24:01.821277 247 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 09:24:01.821302 247 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 09:24:01.821311 247 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 09:24:01.821319 247 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 09:54:01.813594807 +0000 UTC
I201223 09:24:01.822477 262 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 09:24:01.829623 245 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹7413822776e84ad19081553d7aae3d6c›
I201223 09:24:01.829658 245 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹7413822776e84ad19081553d7aae3d6c›
I201223 09:24:01.832830 243 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:9323eb50aeee:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608715441793462962 LocalityAddress:[] ClusterName: SQLAddress:9323eb50aeee:26257} ClusterID:d3091e5a-847b-443c-863f-227832ed0a67 StartedAt:1608715441793462962 LastUp:1608715232596306011}›
I201223 09:24:03.958643 165 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 09:24:03.959584 165 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 09:24:11.802275 157 server/status/runtime.go:522 ⋮ [n1] runtime stats: 163 MiB RSS, 185 goroutines, 16 MiB/40 MiB/38 MiB GO alloc/idle/total, 12 MiB/15 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (9x), 4.8 KiB/0 B (r/w)net
I201223 09:24:21.803063 157 server/status/runtime.go:522 ⋮ [n1] runtime stats: 165 MiB RSS, 185 goroutines, 25 MiB/32 MiB/39 MiB GO alloc/idle/total, 12 MiB/15 MiB CGO alloc/total, 0.1 CGO/sec, 1.2/0.4 %(u/s)time, 0.0 %gc (0x), 440 B/0 B (r/w)net
I201223 09:24:21.803280 152 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 94K 1 ]: 94K›
I201223 09:24:21.803616 152 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   526 K       -   524 K       -       -       -       -   526 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1    94 K       -   239 K     0 B       0     0 B       0    94 K       1   239 K       1     0.4›
‹  total         1    94 K       -   526 K     0 B       0     0 B       0   620 K       1   239 K       1     1.2›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2   8.3 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        10   242 K   98.7%  (score == hit-rate)›
‹ tcache         1   616 B   99.7%  (score == hit-rate)›
‹ titers         0›
‹ filter         -       -   57.3%  (score == utility)›
I201223 09:24:21.907315 244 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 1 expired SQL liveness sessions
I201223 09:24:31.802973 157 server/status/runtime.go:522 ⋮ [n1] runtime stats: 169 MiB RSS, 185 goroutines, 20 MiB/36 MiB/43 MiB GO alloc/idle/total, 12 MiB/15 MiB CGO alloc/total, 3.5 CGO/sec, 1.4/0.5 %(u/s)time, 0.0 %gc (1x), 70 B/0 B (r/w)net
I201223 09:24:41.803534 157 server/status/runtime.go:522 ⋮ [n1] runtime stats: 169 MiB RSS, 186 goroutines, 28 MiB/30 MiB/43 MiB GO alloc/idle/total, 12 MiB/15 MiB CGO alloc/total, 0.1 CGO/sec, 1.4/0.3 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 09:24:51.803545 157 server/status/runtime.go:522 ⋮ [n1] runtime stats: 171 MiB RSS, 186 goroutines, 21 MiB/35 MiB/45 MiB GO alloc/idle/total, 12 MiB/15 MiB CGO alloc/total, 0.1 CGO/sec, 1.7/0.3 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
I201223 09:24:58.001537 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 09:24:58.002922 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 09:24:58.008512 1023 server/drain.go:175 ⋮ [server drain process] drain remaining: 1
I201223 09:24:58.009200 1023 server/drain.go:177 ⋮ [server drain process] drain details: liveness record: 1
I201223 09:24:58.215163 1023 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 09:24:58.216042 1023 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 09:24:58.216933 245 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
W201223 09:24:58.217054 256 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
I201223 09:24:58.222865 1 cli/start.go:869 ⋮ server drained and shutdown completed
