I210105 11:35:26.411774 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2021/01/05 11:35:26
I210105 11:35:26.411802 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹a27599a5ae56›
I210105 11:35:26.411810 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I210105 11:35:26.411814 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I210105 11:35:26.411819 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W210105 11:35:26.411686 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I210105 11:35:26.411880 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I210105 11:35:26.412088 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W210105 11:35:26.412108 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I210105 11:35:26.412266 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I210105 11:35:26.412275 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I210105 11:35:26.413229 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I210105 11:35:26.413249 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I210105 11:35:26.413259 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I210105 11:35:26.413291 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I210105 11:35:26.413302 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I210105 11:35:26.413444 1 cli/start.go:502 ⋮ could not initialize GEOS - spatial functions may not be available: geos: error during GEOS init: geos: cannot load GEOS from dir ‹"/usr/local/lib/cockroach"›: ‹geos error: /usr/local/lib/cockroach/libgeos.so: cannot open shared object file: No such file or directory›
I210105 11:35:26.413483 1 cli/start.go:509 ⋮ starting cockroach node
I210105 11:35:26.425070 104 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I210105 11:35:26.458245 104 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I210105 11:35:26.458262 104 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I210105 11:35:26.458269 104 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W210105 11:35:26.460620 104 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"a27599a5ae56"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I210105 11:35:26.460658 78 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"96dd4b31-a868-4727-9dc0-96ec7dfd7219"›
I210105 11:35:26.465844 104 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"a27599a5ae56:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1609846526465838052 cluster_name:"" sql_address:<network_field:"tcp" address_field:"a27599a5ae56:26257" >›
W210105 11:35:26.468834 210 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W210105 11:35:26.468973 210 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I210105 11:35:26.469116 78 server/server.go:1419 ⋮ [n1] node connected via gossip
I210105 11:35:26.469348 104 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=162 GiB, used=2.5 MiB, logicalBytes=5.3 MiB), ranges=39, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=1821.00 p90=19665.00 pMax=5417470.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I210105 11:35:26.469426 104 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I210105 11:35:26.470874 104 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I210105 11:35:26.470902 104 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I210105 11:35:26.470939 104 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I210105 11:35:26.470953 104 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I210105 11:35:26.470966 104 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I210105 11:35:26.470973 104 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I210105 11:35:26.470985 104 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹a27599a5ae56:8080›)
I210105 11:35:26.471000 104 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I210105 11:35:26.471012 104 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹a27599a5ae56:26257›
I210105 11:35:26.483096 104 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I210105 11:35:26.483321 250 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I210105 11:35:26.483358 104 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I210105 11:35:26.483372 104 server/server.go:1876 ⋮ [n1] serving sql connections
I210105 11:35:26.483502 104 cli/start.go:670 ⋮ [config] clusterID: ‹96dd4b31-a868-4727-9dc0-96ec7dfd7219›
I210105 11:35:26.483531 104 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2021-01-05 11:35:26.483433766 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://a27599a5ae56:8080›
sql:                 ‹postgresql://root@a27599a5ae56:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=a27599a5ae56:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp059315209›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹96dd4b31-a868-4727-9dc0-96ec7dfd7219›
nodeID:              1
