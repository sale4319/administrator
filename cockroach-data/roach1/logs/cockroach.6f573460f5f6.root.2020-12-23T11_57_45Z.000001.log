I201223 11:57:45.789104 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 11:57:45
I201223 11:57:45.789109 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹6f573460f5f6›
I201223 11:57:45.789113 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 11:57:45.789117 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 11:57:45.789121 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 11:57:45.788968 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 11:57:45.789170 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 11:57:45.789362 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 11:57:45.789377 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 11:57:45.789507 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 11:57:45.789515 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 11:57:45.789987 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 11:57:45.789996 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 11:57:45.790006 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 11:57:45.790034 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 11:57:45.790043 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 11:57:45.791687 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 11:57:45.791704 1 cli/start.go:509 ⋮ starting cockroach node
I201223 11:57:45.812864 14 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 11:57:45.823189 14 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 11:57:45.823204 14 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 11:57:45.823210 14 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 11:57:45.824672 14 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"6f573460f5f6"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 11:57:45.824662 46 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 11:57:45.826779 14 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"6f573460f5f6:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608724665826773249 cluster_name:"" sql_address:<network_field:"tcp" address_field:"6f573460f5f6:26257" >›
W201223 11:57:45.832957 214 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 11:57:45.833091 214 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 11:57:45.833125 46 server/server.go:1419 ⋮ [n1] node connected via gossip
I201223 11:57:45.833616 14 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=162 GiB, used=4.5 MiB, logicalBytes=27 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=19417.00 pMax=28238937.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 11:57:45.833701 14 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 11:57:45.834685 14 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 11:57:45.834713 14 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 11:57:45.834762 14 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 11:57:45.834778 14 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 11:57:45.834792 14 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 11:57:45.834799 14 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 11:57:45.834811 14 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹6f573460f5f6:8080›)
I201223 11:57:45.834828 14 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 11:57:45.834841 14 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹6f573460f5f6:26257›
I201223 11:57:45.847370 14 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 11:57:45.847560 14 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 11:57:45.847574 14 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 11:57:45.847676 14 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 11:57:45.847705 14 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 11:57:45.847619127 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://6f573460f5f6:8080›
sql:                 ‹postgresql://root@6f573460f5f6:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=6f573460f5f6:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp784323731›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 11:57:45.848694 259 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 11:57:45.849487 273 jobs/job_scheduler.go:346 ⋮ [n1] waiting 4m0s before scheduled jobs daemon start
I201223 11:57:45.864251 259 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 11:57:45.864432 259 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 11:57:45.864450 259 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 11:57:45.864460 259 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 12:27:45.848470457 +0000 UTC
I201223 11:57:45.869816 290 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 11:57:45.872956 248 sql/catalog/lease/lease.go:2115 ⋮ released orphaned lease: ‹{id:52 version:1 expiration:{Time:{wall:512877000 ext:63744321761 loc:<nil>}}}›
I201223 11:57:45.873053 81 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹c6e4b3517e3442e1a4175154e31f87bc›
I201223 11:57:45.873084 81 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹c6e4b3517e3442e1a4175154e31f87bc›
I201223 11:57:45.881629 79 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:6f573460f5f6:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608724665826773249 LocalityAddress:[] ClusterName: SQLAddress:6f573460f5f6:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608724665826773249 LastUp:1608724657868394944}›
I201223 11:57:47.579189 132 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 11:57:47.579927 132 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 11:57:55.836507 143 server/status/runtime.go:522 ⋮ [n1] runtime stats: 208 MiB RSS, 206 goroutines, 21 MiB/36 MiB/45 MiB GO alloc/idle/total, 9.3 MiB/19 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (27x), 30 KiB/31 KiB (r/w)net
I201223 11:58:04.068015 80 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 1 expired SQL liveness sessions
I201223 11:58:05.836484 143 server/status/runtime.go:522 ⋮ [n1] runtime stats: 208 MiB RSS, 206 goroutines, 18 MiB/37 MiB/45 MiB GO alloc/idle/total, 9.5 MiB/19 MiB CGO alloc/total, 1.3 CGO/sec, 1.9/0.4 %(u/s)time, 0.0 %gc (1x), 234 B/0 B (r/w)net
I201223 11:58:05.838864 138 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 1M 1 ]: 1M›
I201223 11:58:05.839207 138 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   639 K       -   635 K       -       -       -       -   639 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   1.0 M       -    84 K     0 B       0     0 B       0   1.0 M       1   1.1 M       1    12.3›
‹  total         1   1.0 M       -   639 K     0 B       0     0 B       0   1.6 M       1   1.1 M       1     2.6›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2   2.3 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        18   545 K   94.4%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         0›
‹ filter         -       -   80.4%  (score == utility)›
I201223 11:58:15.836552 143 server/status/runtime.go:522 ⋮ [n1] runtime stats: 208 MiB RSS, 206 goroutines, 25 MiB/32 MiB/45 MiB GO alloc/idle/total, 9.5 MiB/19 MiB CGO alloc/total, 0.1 CGO/sec, 1.7/0.4 %(u/s)time, 0.0 %gc (0x), 42 B/0 B (r/w)net
I201223 11:58:22.610207 80 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 1 expired SQL liveness sessions
I201223 11:58:25.836866 143 server/status/runtime.go:522 ⋮ [n1] runtime stats: 208 MiB RSS, 207 goroutines, 21 MiB/34 MiB/45 MiB GO alloc/idle/total, 9.5 MiB/19 MiB CGO alloc/total, 0.1 CGO/sec, 1.8/0.4 %(u/s)time, 0.0 %gc (1x), 70 B/0 B (r/w)net
I201223 11:58:32.960066 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 11:58:32.966091 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 11:58:32.977956 1478 server/drain.go:175 ⋮ [server drain process] drain remaining: 2
I201223 11:58:32.979404 1478 server/drain.go:177 ⋮ [server drain process] drain details: descriptor leases: 1, liveness record: 1
I201223 11:58:33.185934 1478 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 11:58:33.186839 1478 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 11:58:33.187863 81 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
W201223 11:58:33.188032 268 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
I201223 11:58:33.193368 1 cli/start.go:869 ⋮ server drained and shutdown completed
