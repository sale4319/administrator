I201223 09:28:52.956685 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 09:28:52
I201223 09:28:52.956690 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹2304407c449d›
I201223 09:28:52.956694 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 09:28:52.956697 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 09:28:52.956701 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 09:28:52.956626 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 09:28:52.956806 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 09:28:52.957029 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 09:28:52.957043 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 09:28:52.957163 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 09:28:52.957171 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 09:28:52.957644 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 09:28:52.957652 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 09:28:52.957661 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 09:28:52.957690 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 09:28:52.957699 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 09:28:52.959379 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 09:28:52.959398 1 cli/start.go:509 ⋮ starting cockroach node
I201223 09:28:52.970063 71 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 09:28:53.077193 71 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 09:28:53.077213 71 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 09:28:53.077220 71 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 09:28:53.078789 71 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"2304407c449d"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 09:28:53.080367 71 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"2304407c449d:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608715733080362558 cluster_name:"" sql_address:<network_field:"tcp" address_field:"2304407c449d:26257" >›
I201223 09:28:53.078867 97 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
W201223 09:28:53.083041 71 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r9/1:‹/Table/1{3-4}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
I201223 09:28:53.083166 71 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=163 GiB, used=1.6 MiB, logicalBytes=18 MiB), ranges=35, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=1529.00 p90=17288.00 pMax=18863719.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 09:28:53.083247 71 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
W201223 09:28:53.083398 223 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 09:28:53.083558 97 server/server.go:1419 ⋮ [n1] node connected via gossip
I201223 09:28:53.085067 71 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 09:28:53.085109 71 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 09:28:53.085166 71 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 09:28:53.085188 71 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 09:28:53.085204 71 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 09:28:53.085217 71 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 09:28:53.085280 71 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹2304407c449d:8080›)
I201223 09:28:53.085299 71 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 09:28:53.085317 71 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹2304407c449d:26257›
I201223 09:28:53.103831 71 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 09:28:53.104337 71 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 09:28:53.104357 71 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 09:28:53.104489 71 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 09:28:53.104526 71 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 09:28:53.104418562 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://2304407c449d:8080›
sql:                 ‹postgresql://root@2304407c449d:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=2304407c449d:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp014320717›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 09:28:53.106329 276 jobs/job_scheduler.go:346 ⋮ [n1] waiting 3m0s before scheduled jobs daemon start
I201223 09:28:53.108684 262 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 09:28:53.116038 262 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 09:28:53.116067 262 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 09:28:53.116079 262 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 09:28:53.116086 262 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 09:58:53.105886507 +0000 UTC
I201223 09:28:53.118856 277 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 09:28:53.125351 260 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹563a3ec6fca44fdbb4ee6e2de09e490f›
I201223 09:28:53.125380 260 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹563a3ec6fca44fdbb4ee6e2de09e490f›
I201223 09:28:53.128376 258 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:2304407c449d:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608715733080362558 LocalityAddress:[] ClusterName: SQLAddress:2304407c449d:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608715733080362558 LastUp:1608649646386774016}›
I201223 09:28:55.489367 148 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 09:28:55.490173 148 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 09:28:57.463481 422 sql/event_log.go:162 ⋮ [n1,client=‹172.19.0.4:49708›,hostnossl,user=root] Event: ‹"create_table"›, target: 53, info: ‹{TableName:cockroachdb.public.workers Statement:CREATE TABLE workers (id INT8 NOT NULL DEFAULT unique_rowid(), db VARCHAR(255), department VARCHAR(255), name VARCHAR(255), "position" VARCHAR(255), updateon VARCHAR(255), PRIMARY KEY (id)) User:root}›
I201223 09:28:57.464525 808 kv/kvserver/replica_command.go:414 ⋮ [n1,split,s1,r35/1:‹/{Table/39-Max}›] initiating a split of this range at key ‹/Table/53› [r36] (‹zone config›)‹›
I201223 09:29:03.088187 58 server/status/runtime.go:522 ⋮ [n1] runtime stats: 187 MiB RSS, 190 goroutines, 22 MiB/36 MiB/45 MiB GO alloc/idle/total, 38 MiB/44 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (29x), 33 KiB/31 KiB (r/w)net
I201223 09:29:13.088833 58 server/status/runtime.go:522 ⋮ [n1] runtime stats: 187 MiB RSS, 187 goroutines, 18 MiB/37 MiB/45 MiB GO alloc/idle/total, 38 MiB/44 MiB CGO alloc/total, 0.9 CGO/sec, 1.2/0.5 %(u/s)time, 0.0 %gc (1x), 988 B/0 B (r/w)net
I201223 09:29:13.089313 53 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 649K 1 ]: 649K›
I201223 09:29:13.089661 53 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   562 K       -   558 K       -       -       -       -   562 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   649 K       -   171 K     0 B       0     0 B       0   649 K       1   749 K       1     3.8›
‹  total         1   649 K       -   562 K     0 B       0     0 B       0   1.2 M       1   749 K       1     2.2›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2    32 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        14   438 K   94.8%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         0›
‹ filter         -       -   83.4%  (score == utility)›
I201223 09:29:14.170736 259 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 1 expired SQL liveness sessions
I201223 09:29:23.089027 58 server/status/runtime.go:522 ⋮ [n1] runtime stats: 187 MiB RSS, 187 goroutines, 25 MiB/31 MiB/45 MiB GO alloc/idle/total, 38 MiB/44 MiB CGO alloc/total, 0.1 CGO/sec, 1.6/0.3 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 09:29:33.089225 58 server/status/runtime.go:522 ⋮ [n1] runtime stats: 187 MiB RSS, 188 goroutines, 19 MiB/36 MiB/46 MiB GO alloc/idle/total, 38 MiB/44 MiB CGO alloc/total, 0.1 CGO/sec, 1.1/0.3 %(u/s)time, 0.0 %gc (1x), 70 B/0 B (r/w)net
I201223 09:29:43.088440 58 server/status/runtime.go:522 ⋮ [n1] runtime stats: 187 MiB RSS, 188 goroutines, 25 MiB/32 MiB/46 MiB GO alloc/idle/total, 38 MiB/44 MiB CGO alloc/total, 0.1 CGO/sec, 1.0/0.3 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 09:29:51.360761 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 09:29:51.361847 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 09:29:51.366623 1599 server/drain.go:175 ⋮ [server drain process] drain remaining: 2
I201223 09:29:51.367723 1599 server/drain.go:177 ⋮ [server drain process] drain details: descriptor leases: 1, liveness record: 1
I201223 09:29:51.573697 1599 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 09:29:51.574577 1599 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 09:29:51.575527 260 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
W201223 09:29:51.576018 271 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
I201223 09:29:51.581414 1 cli/start.go:869 ⋮ server drained and shutdown completed
