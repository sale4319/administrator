I201223 09:39:53.608048 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 09:39:53
I201223 09:39:53.608054 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹f8cea15537fd›
I201223 09:39:53.608058 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 09:39:53.608061 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 09:39:53.608066 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 09:39:53.607983 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 09:39:53.608122 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 09:39:53.608315 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 09:39:53.608330 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 09:39:53.608468 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 09:39:53.608476 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 09:39:53.608977 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 09:39:53.608987 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 09:39:53.608997 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 09:39:53.609026 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 09:39:53.609036 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 09:39:53.610790 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 09:39:53.610809 1 cli/start.go:509 ⋮ starting cockroach node
I201223 09:39:53.620926 26 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 09:39:53.657091 26 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 09:39:53.657111 26 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 09:39:53.657118 26 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 09:39:53.658613 26 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"f8cea15537fd"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 09:39:53.658678 173 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 09:39:53.660486 26 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"f8cea15537fd:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608716393660480326 cluster_name:"" sql_address:<network_field:"tcp" address_field:"f8cea15537fd:26257" >›
W201223 09:39:53.664144 235 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 09:39:53.664253 235 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 09:39:53.665469 173 server/server.go:1419 ⋮ [n1] node connected via gossip
I201223 09:39:53.665814 26 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=163 GiB, used=2.0 MiB, logicalBytes=19 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=17806.00 pMax=19646833.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 09:39:53.665985 26 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 09:39:53.668424 26 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 09:39:53.668480 26 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 09:39:53.668533 26 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 09:39:53.668554 26 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 09:39:53.668570 26 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 09:39:53.668583 26 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 09:39:53.668597 26 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹f8cea15537fd:8080›)
I201223 09:39:53.668617 26 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 09:39:53.668635 26 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹f8cea15537fd:26257›
I201223 09:39:53.686625 26 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 09:39:53.686830 26 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 09:39:53.686844 26 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 09:39:53.686951 26 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 09:39:53.686983 26 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 09:39:53.686894014 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://f8cea15537fd:8080›
sql:                 ‹postgresql://root@f8cea15537fd:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=f8cea15537fd:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp727711282›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 09:39:53.687365 266 jobs/job_scheduler.go:346 ⋮ [n1] waiting 4m0s before scheduled jobs daemon start
I201223 09:39:53.687618 108 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 09:39:53.703789 108 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 09:39:53.703814 108 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 09:39:53.703823 108 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 09:39:53.703831 108 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 10:09:53.687267102 +0000 UTC
I201223 09:39:53.705828 267 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 09:39:53.715027 106 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹6b510539a19f4dc7ae07917e92c1971b›
I201223 09:39:53.715059 106 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹6b510539a19f4dc7ae07917e92c1971b›
I201223 09:39:53.715714 104 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:f8cea15537fd:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608716393660480326 LocalityAddress:[] ClusterName: SQLAddress:f8cea15537fd:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608716393660480326 LastUp:1608716058083052751}›
I201223 09:39:55.871232 176 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 09:39:55.872001 176 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 09:40:03.671802 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 190 MiB RSS, 188 goroutines, 17 MiB/38 MiB/43 MiB GO alloc/idle/total, 21 MiB/28 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (26x), 32 KiB/31 KiB (r/w)net
I201223 09:40:13.246514 105 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 1 expired SQL liveness sessions
I201223 09:40:13.671304 37 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 678K 1 ]: 678K›
I201223 09:40:13.671662 37 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   545 K       -   542 K       -       -       -       -   545 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   678 K       -   162 K     0 B       0     0 B       0   678 K       1   806 K       1     4.2›
‹  total         1   678 K       -   545 K     0 B       0     0 B       0   1.2 M       1   806 K       1     2.2›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2    16 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        13   419 K   96.1%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         1›
‹ filter         -       -   76.4%  (score == utility)›
I201223 09:40:13.671926 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 192 MiB RSS, 188 goroutines, 26 MiB/30 MiB/44 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.5 CGO/sec, 1.8/0.4 %(u/s)time, 0.0 %gc (0x), 988 B/0 B (r/w)net
I201223 09:40:23.672078 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 192 MiB RSS, 186 goroutines, 21 MiB/35 MiB/45 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 2.0/0.4 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
I201223 09:40:33.671256 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 192 MiB RSS, 187 goroutines, 28 MiB/29 MiB/45 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.9/0.2 %(u/s)time, 0.0 %gc (0x), 70 B/0 B (r/w)net
I201223 09:40:43.672447 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 194 MiB RSS, 187 goroutines, 22 MiB/34 MiB/45 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.5/0.2 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
I201223 09:40:53.669394 38 gossip/gossip.go:568 ⋮ [n1] gossip status (ok, 1 node‹›)
gossip client (0/3 cur/max conns)
gossip server (0/3 cur/max conns, infos 0/0 sent/received, bytes 0B/0B sent/received)
gossip connectivity
  n1 [sentinel];
I201223 09:40:53.671726 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 194 MiB RSS, 187 goroutines, 28 MiB/29 MiB/45 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.0/0.5 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 09:41:03.672771 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 194 MiB RSS, 186 goroutines, 20 MiB/35 MiB/46 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.7/0.4 %(u/s)time, 0.0 %gc (1x), 70 B/0 B (r/w)net
I201223 09:41:13.672990 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 196 MiB RSS, 186 goroutines, 26 MiB/31 MiB/46 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.3/0.4 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 09:41:23.673020 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 196 MiB RSS, 186 goroutines, 32 MiB/26 MiB/46 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.7/0.3 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 09:41:33.673214 42 server/status/runtime.go:522 ⋮ [n1] runtime stats: 196 MiB RSS, 187 goroutines, 24 MiB/33 MiB/48 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.1 CGO/sec, 1.2/0.4 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
I201223 09:41:39.901611 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 09:41:39.902329 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 09:41:39.907951 2184 server/drain.go:175 ⋮ [server drain process] drain remaining: 2
I201223 09:41:39.908626 2184 server/drain.go:177 ⋮ [server drain process] drain details: descriptor leases: 1, liveness record: 1
