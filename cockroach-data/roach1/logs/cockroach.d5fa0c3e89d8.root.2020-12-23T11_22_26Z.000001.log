I201223 11:22:26.601555 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 11:22:26
I201223 11:22:26.601560 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹d5fa0c3e89d8›
I201223 11:22:26.601563 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 11:22:26.601568 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 11:22:26.601572 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 11:22:26.601490 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 11:22:26.601618 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 11:22:26.601808 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 11:22:26.601823 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 11:22:26.601950 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 11:22:26.601958 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 11:22:26.602548 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 11:22:26.602557 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 11:22:26.602567 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 11:22:26.602596 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 11:22:26.602605 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 11:22:26.604270 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 11:22:26.604288 1 cli/start.go:509 ⋮ starting cockroach node
I201223 11:22:26.635604 53 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 11:22:26.650381 53 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 11:22:26.650406 53 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 11:22:26.650416 53 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 11:22:26.652155 53 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"d5fa0c3e89d8"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 11:22:26.652342 76 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 11:22:26.655986 53 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"d5fa0c3e89d8:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608722546655978240 cluster_name:"" sql_address:<network_field:"tcp" address_field:"d5fa0c3e89d8:26257" >›
I201223 11:22:26.659927 76 server/server.go:1419 ⋮ [n1] node connected via gossip
W201223 11:22:26.659938 216 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 11:22:26.660218 216 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 11:22:26.660671 53 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=163 GiB, used=3.5 MiB, logicalBytes=23 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=17806.00 pMax=23762751.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 11:22:26.660764 53 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 11:22:26.661925 53 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 11:22:26.661945 53 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 11:22:26.661983 53 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 11:22:26.661998 53 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 11:22:26.662011 53 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 11:22:26.662019 53 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 11:22:26.662031 53 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹d5fa0c3e89d8:8080›)
I201223 11:22:26.662048 53 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 11:22:26.662061 53 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹d5fa0c3e89d8:26257›
I201223 11:22:26.674092 53 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 11:22:26.674401 53 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 11:22:26.674425 53 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 11:22:26.674579 53 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 11:22:26.674618 53 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 11:22:26.674501865 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://d5fa0c3e89d8:8080›
sql:                 ‹postgresql://root@d5fa0c3e89d8:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=d5fa0c3e89d8:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp475670254›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 11:22:26.676286 270 jobs/job_scheduler.go:346 ⋮ [n1] waiting 4m0s before scheduled jobs daemon start
I201223 11:22:26.678107 240 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 11:22:26.687144 240 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 11:22:26.687180 240 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 11:22:26.687191 240 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 11:22:26.687200 240 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 11:52:26.67513602 +0000 UTC
I201223 11:22:26.689327 271 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 11:22:26.694328 389 sql/catalog/lease/lease.go:2115 ⋮ released orphaned lease: ‹{id:52 version:1 expiration:{Time:{wall:570291000 ext:63744319612 loc:<nil>}}}›
I201223 11:22:26.696881 238 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹9afed6883e78400a895ffb3e7c3edc0b›
I201223 11:22:26.696909 238 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹9afed6883e78400a895ffb3e7c3edc0b›
I201223 11:22:26.699669 236 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:d5fa0c3e89d8:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608722546655978240 LocalityAddress:[] ClusterName: SQLAddress:d5fa0c3e89d8:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608722546655978240 LastUp:1608722524183319409}›
I201223 11:22:28.723800 133 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 11:22:28.724802 133 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 11:22:36.663836 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 194 MiB RSS, 206 goroutines, 27 MiB/30 MiB/44 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (26x), 31 KiB/32 KiB (r/w)net
I201223 11:22:46.663912 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 194 MiB RSS, 206 goroutines, 25 MiB/30 MiB/45 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.1 CGO/sec, 2.3/0.7 %(u/s)time, 0.0 %gc (1x), 1.4 KiB/1.4 KiB (r/w)net
I201223 11:22:46.665379 225 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 828K 1 ]: 828K›
I201223 11:22:46.665727 225 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   547 K       -   543 K       -       -       -       -   547 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   828 K       -    84 K     0 B       0     0 B       0   828 K       1   934 K       1     9.8›
‹  total         1   828 K       -   547 K     0 B       0     0 B       0   1.3 M       1   934 K       1     2.5›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2   2.3 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        14   419 K   95.4%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         0›
‹ filter         -       -   77.5%  (score == utility)›
I201223 11:22:46.683425 237 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 2 expired SQL liveness sessions
I201223 11:22:56.665598 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 195 MiB RSS, 206 goroutines, 32 MiB/24 MiB/47 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.1 CGO/sec, 2.1/0.6 %(u/s)time, 0.0 %gc (0x), 70 B/0 B (r/w)net
I201223 11:23:06.664026 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 195 MiB RSS, 207 goroutines, 26 MiB/29 MiB/49 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.1 CGO/sec, 2.1/0.8 %(u/s)time, 0.0 %gc (1x), 1.1 KiB/1.2 KiB (r/w)net
I201223 11:23:16.664212 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 195 MiB RSS, 207 goroutines, 32 MiB/24 MiB/49 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.1 CGO/sec, 1.8/0.4 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 11:23:26.662283 242 gossip/gossip.go:568 ⋮ [n1] gossip status (ok, 1 node‹›)
gossip client (0/3 cur/max conns)
gossip server (0/3 cur/max conns, infos 0/0 sent/received, bytes 0B/0B sent/received)
gossip connectivity
  n1 [sentinel];
I201223 11:23:26.664383 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 195 MiB RSS, 207 goroutines, 22 MiB/33 MiB/51 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.1 CGO/sec, 1.9/0.8 %(u/s)time, 0.0 %gc (1x), 772 B/795 B (r/w)net
I201223 11:23:36.664609 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 195 MiB RSS, 206 goroutines, 30 MiB/27 MiB/51 MiB GO alloc/idle/total, 8.2 MiB/17 MiB CGO alloc/total, 0.1 CGO/sec, 1.3/0.6 %(u/s)time, 0.0 %gc (0x), 1.0 KiB/1.1 KiB (r/w)net
I201223 11:23:46.664742 246 server/status/runtime.go:522 ⋮ [n1] runtime stats: 197 MiB RSS, 206 goroutines, 20 MiB/34 MiB/51 MiB GO alloc/idle/total, 12 MiB/21 MiB CGO alloc/total, 0.2 CGO/sec, 1.2/0.7 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
I201223 11:23:48.091814 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 11:23:48.092843 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 11:23:48.108315 1885 server/drain.go:175 ⋮ [server drain process] drain remaining: 3
I201223 11:23:48.109430 1885 server/drain.go:177 ⋮ [server drain process] drain details: descriptor leases: 2, liveness record: 1
I201223 11:23:48.315831 1885 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 11:23:48.317063 1885 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 11:23:48.318217 238 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
W201223 11:23:48.319604 265 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
I201223 11:23:48.325887 1 cli/start.go:869 ⋮ server drained and shutdown completed
