I201223 11:57:27.735982 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 11:57:27
I201223 11:57:27.735988 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹6f573460f5f6›
I201223 11:57:27.735992 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 11:57:27.735996 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 11:57:27.736001 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 11:57:27.735925 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 11:57:27.736060 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 11:57:27.736264 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 11:57:27.736278 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 11:57:27.736415 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 11:57:27.736423 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 11:57:27.736784 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 11:57:27.736792 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 11:57:27.736801 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 11:57:27.736848 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 11:57:27.736858 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 11:57:27.738587 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 11:57:27.738609 1 cli/start.go:509 ⋮ starting cockroach node
I201223 11:57:27.751807 103 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 11:57:27.851466 103 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 11:57:27.851481 103 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 11:57:27.851488 103 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 11:57:27.853220 103 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"6f573460f5f6"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 11:57:27.853365 165 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 11:57:27.855570 103 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"6f573460f5f6:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608724647855566806 cluster_name:"" sql_address:<network_field:"tcp" address_field:"6f573460f5f6:26257" >›
W201223 11:57:27.861037 223 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
I201223 11:57:27.861151 165 server/server.go:1419 ⋮ [n1] node connected via gossip
W201223 11:57:27.861141 223 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 11:57:27.861688 103 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=162 GiB, used=4.7 MiB, logicalBytes=27 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=18656.00 pMax=28164583.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 11:57:27.861780 103 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 11:57:27.864045 103 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 11:57:27.864082 103 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 11:57:27.864121 103 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 11:57:27.864136 103 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 11:57:27.864149 103 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 11:57:27.864156 103 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 11:57:27.864168 103 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹6f573460f5f6:8080›)
I201223 11:57:27.864182 103 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 11:57:27.864195 103 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹6f573460f5f6:26257›
I201223 11:57:27.880999 103 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 11:57:27.881603 78 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 11:57:27.886062 103 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 11:57:27.886860 103 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 11:57:27.886980 103 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 11:57:27.887008 103 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 11:57:27.886916353 +0000 UTC (took 0.2s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://6f573460f5f6:8080›
sql:                 ‹postgresql://root@6f573460f5f6:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=6f573460f5f6:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp857935270›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 11:57:27.887368 288 jobs/job_scheduler.go:346 ⋮ [n1] waiting 3m0s before scheduled jobs daemon start
I201223 11:57:27.897718 289 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 11:57:27.900282 78 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 11:57:27.900317 78 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 11:57:27.900328 78 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 11:57:27.900346 78 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 12:27:27.881042575 +0000 UTC
I201223 11:57:27.911518 74 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:6f573460f5f6:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608724647855566806 LocalityAddress:[] ClusterName: SQLAddress:6f573460f5f6:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608724647855566806 LastUp:1608724486512474513}›
I201223 11:57:27.912148 76 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹5ebe575b317b4bbc9aff5e6b3d23966e›
I201223 11:57:27.912171 76 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹5ebe575b317b4bbc9aff5e6b3d23966e›
I201223 11:57:30.009296 168 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 11:57:30.010112 168 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 11:57:37.868169 33 server/status/runtime.go:522 ⋮ [n1] runtime stats: 204 MiB RSS, 209 goroutines, 25 MiB/32 MiB/45 MiB GO alloc/idle/total, 39 MiB/47 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (29x), 30 KiB/31 KiB (r/w)net
