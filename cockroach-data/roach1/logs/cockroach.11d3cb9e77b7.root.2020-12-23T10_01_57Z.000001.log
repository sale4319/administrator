I201223 10:01:57.900697 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 10:01:57
I201223 10:01:57.900701 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹11d3cb9e77b7›
I201223 10:01:57.900706 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 10:01:57.900709 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 10:01:57.900713 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 10:01:57.900642 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 10:01:57.900761 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 10:01:57.900948 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 10:01:57.900962 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 10:01:57.901091 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 10:01:57.901099 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 10:01:57.901429 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 10:01:57.901437 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 10:01:57.901447 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 10:01:57.901475 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 10:01:57.901485 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 10:01:57.903178 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 10:01:57.903199 1 cli/start.go:509 ⋮ starting cockroach node
I201223 10:01:57.915786 74 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 10:01:57.968061 74 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 10:01:57.968076 74 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 10:01:57.968082 74 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 10:01:57.969673 74 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"11d3cb9e77b7"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 10:01:57.969724 64 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 10:01:57.971375 74 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"11d3cb9e77b7:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608717717971369986 cluster_name:"" sql_address:<network_field:"tcp" address_field:"11d3cb9e77b7:26257" >›
W201223 10:01:57.976225 236 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 10:01:57.976360 236 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 10:01:57.976557 74 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=163 GiB, used=2.7 MiB, logicalBytes=20 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=17806.00 pMax=21250661.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 10:01:57.976610 64 server/server.go:1419 ⋮ [n1] node connected via gossip
I201223 10:01:57.976663 74 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 10:01:57.977867 74 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 10:01:57.977887 74 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 10:01:57.977921 74 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 10:01:57.977935 74 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 10:01:57.977947 74 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 10:01:57.977954 74 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 10:01:57.977965 74 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹11d3cb9e77b7:8080›)
I201223 10:01:57.977980 74 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 10:01:57.977991 74 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹11d3cb9e77b7:26257›
I201223 10:01:57.992501 74 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 10:01:57.992741 74 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 10:01:57.992757 74 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 10:01:57.992859 74 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 10:01:57.992888 74 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 10:01:57.992800998 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://11d3cb9e77b7:8080›
sql:                 ‹postgresql://root@11d3cb9e77b7:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=11d3cb9e77b7:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp614656479›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 10:01:57.993238 267 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 10:01:57.993353 281 jobs/job_scheduler.go:346 ⋮ [n1] waiting 2m0s before scheduled jobs daemon start
I201223 10:01:58.002920 267 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 10:01:58.002943 267 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 10:01:58.002954 267 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 10:01:58.002962 267 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 10:31:57.993119996 +0000 UTC
I201223 10:01:58.003487 282 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 10:01:58.011137 265 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹3bd6a27a01974f5ab26e28e58249feab›
I201223 10:01:58.011157 265 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹3bd6a27a01974f5ab26e28e58249feab›
I201223 10:01:58.016884 263 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:11d3cb9e77b7:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608717717971369986 LocalityAddress:[] ClusterName: SQLAddress:11d3cb9e77b7:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608717717971369986 LastUp:1608717087914291819}›
I201223 10:01:59.514650 179 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 10:01:59.516405 179 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 10:02:07.979573 110 server/status/runtime.go:522 ⋮ [n1] runtime stats: 180 MiB RSS, 186 goroutines, 28 MiB/30 MiB/47 MiB GO alloc/idle/total, 22 MiB/29 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (12x), 3.4 KiB/0 B (r/w)net
I201223 10:02:16.435730 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 10:02:16.436901 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 10:02:16.441346 669 server/drain.go:175 ⋮ [server drain process] drain remaining: 1
I201223 10:02:16.442453 669 server/drain.go:177 ⋮ [server drain process] drain details: liveness record: 1
I201223 10:02:16.649149 669 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 10:02:16.650065 669 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 10:02:16.651043 276 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
W201223 10:02:16.651319 265 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
I201223 10:02:16.656689 1 cli/start.go:869 ⋮ server drained and shutdown completed
