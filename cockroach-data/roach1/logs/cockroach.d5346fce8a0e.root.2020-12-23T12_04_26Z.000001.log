I201223 12:04:26.410647 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 12:04:26
I201223 12:04:26.410653 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹d5346fce8a0e›
I201223 12:04:26.410658 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 12:04:26.410661 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 12:04:26.410666 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 12:04:26.410582 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 12:04:26.410727 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 12:04:26.410937 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 12:04:26.410952 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 12:04:26.411087 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 12:04:26.411094 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 12:04:26.411744 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 12:04:26.411755 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 12:04:26.411765 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 12:04:26.411795 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 12:04:26.411805 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 12:04:26.414007 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 12:04:26.414046 1 cli/start.go:509 ⋮ starting cockroach node
I201223 12:04:26.424582 57 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 12:04:26.437348 57 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 12:04:26.437365 57 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 12:04:26.437372 57 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 12:04:26.438923 57 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"d5346fce8a0e"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 12:04:26.438991 136 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 12:04:26.443100 57 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"d5346fce8a0e:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608725066443094719 cluster_name:"" sql_address:<network_field:"tcp" address_field:"d5346fce8a0e:26257" >›
W201223 12:04:26.450106 202 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 12:04:26.450217 202 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 12:04:26.450544 136 server/server.go:1419 ⋮ [n1] node connected via gossip
I201223 12:04:26.450904 57 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=162 GiB, used=4.9 MiB, logicalBytes=28 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=23222.00 pMax=29012483.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 12:04:26.450994 57 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 12:04:26.452102 57 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 12:04:26.452128 57 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 12:04:26.452171 57 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 12:04:26.452185 57 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 12:04:26.452199 57 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 12:04:26.452206 57 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 12:04:26.452218 57 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹d5346fce8a0e:8080›)
I201223 12:04:26.452233 57 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 12:04:26.452247 57 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹d5346fce8a0e:26257›
I201223 12:04:26.468287 57 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 12:04:26.468559 57 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 12:04:26.468582 57 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 12:04:26.468735 57 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 12:04:26.468769 57 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 12:04:26.468650189 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://d5346fce8a0e:8080›
sql:                 ‹postgresql://root@d5346fce8a0e:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=d5346fce8a0e:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp168263360›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 12:04:26.472459 49 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 12:04:26.472902 271 jobs/job_scheduler.go:346 ⋮ [n1] waiting 2m0s before scheduled jobs daemon start
I201223 12:04:26.484976 49 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 12:04:26.485007 49 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 12:04:26.485199 49 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 12:04:26.485219 49 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 12:34:26.472430355 +0000 UTC
I201223 12:04:26.487663 272 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 12:04:26.497696 285 sql/catalog/lease/lease.go:2115 ⋮ released orphaned lease: ‹{id:52 version:1 expiration:{Time:{wall:925662000 ext:63744322064 loc:<nil>}}}›
I201223 12:04:26.497832 286 sql/catalog/lease/lease.go:2115 ⋮ released orphaned lease: ‹{id:53 version:1 expiration:{Time:{wall:750751000 ext:63744322078 loc:<nil>}}}›
I201223 12:04:26.509303 47 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹a6ebcebe7f9145dfb12d75981faf3ed5›
I201223 12:04:26.509338 47 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹a6ebcebe7f9145dfb12d75981faf3ed5›
I201223 12:04:26.509931 45 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:d5346fce8a0e:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608725066443094719 LocalityAddress:[] ClusterName: SQLAddress:d5346fce8a0e:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608725066443094719 LastUp:1608724975800384285}›
I201223 12:04:28.371696 139 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 12:04:28.374276 139 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 12:04:36.453288 126 server/status/runtime.go:522 ⋮ [n1] runtime stats: 203 MiB RSS, 208 goroutines, 19 MiB/37 MiB/45 MiB GO alloc/idle/total, 8.3 MiB/18 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (27x), 32 KiB/32 KiB (r/w)net
I201223 12:04:43.490256 46 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 2 expired SQL liveness sessions
I201223 12:04:46.454467 126 server/status/runtime.go:522 ⋮ [n1] runtime stats: 205 MiB RSS, 206 goroutines, 29 MiB/27 MiB/45 MiB GO alloc/idle/total, 8.5 MiB/18 MiB CGO alloc/total, 0.9 CGO/sec, 1.6/0.8 %(u/s)time, 0.0 %gc (0x), 937 B/811 B (r/w)net
I201223 12:04:46.457559 121 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 1M 1 ]: 1M›
I201223 12:04:46.458676 121 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   546 K       -   542 K       -       -       -       -   546 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   1.0 M       -    73 K     0 B       0     0 B       0   1.0 M       1   1.1 M       1    14.3›
‹  total         1   1.0 M       -   546 K     0 B       0     0 B       0   1.6 M       1   1.1 M       1     2.9›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2   2.3 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        19   516 K   94.3%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         0›
‹ filter         -       -   77.9%  (score == utility)›
I201223 12:04:56.454651 126 server/status/runtime.go:522 ⋮ [n1] runtime stats: 205 MiB RSS, 206 goroutines, 25 MiB/30 MiB/45 MiB GO alloc/idle/total, 8.5 MiB/18 MiB CGO alloc/total, 0.1 CGO/sec, 1.7/0.5 %(u/s)time, 0.0 %gc (1x), 70 B/0 B (r/w)net
I201223 12:05:06.454791 126 server/status/runtime.go:522 ⋮ [n1] runtime stats: 206 MiB RSS, 207 goroutines, 33 MiB/24 MiB/46 MiB GO alloc/idle/total, 8.5 MiB/18 MiB CGO alloc/total, 0.1 CGO/sec, 1.6/0.7 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 12:05:08.910712 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 12:05:08.911321 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 12:05:08.918850 1462 server/drain.go:175 ⋮ [server drain process] drain remaining: 3
I201223 12:05:08.919833 1462 server/drain.go:177 ⋮ [server drain process] drain details: descriptor leases: 2, liveness record: 1
I201223 12:05:09.127643 1462 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 12:05:09.128559 1462 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 12:05:09.129497 47 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
W201223 12:05:09.129575 266 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
I201223 12:05:09.135013 1 cli/start.go:869 ⋮ server drained and shutdown completed
