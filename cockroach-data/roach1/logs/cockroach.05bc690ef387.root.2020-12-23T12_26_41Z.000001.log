I201223 12:26:41.804147 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 12:26:41
I201223 12:26:41.804152 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹05bc690ef387›
I201223 12:26:41.804155 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 12:26:41.804159 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 12:26:41.804173 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 12:26:41.804089 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 12:26:41.804425 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 12:26:41.804646 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 12:26:41.804677 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 12:26:41.804833 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 12:26:41.804846 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 12:26:41.805739 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 12:26:41.805749 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 12:26:41.805760 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 12:26:41.805802 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 12:26:41.805813 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 12:26:41.807554 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 12:26:41.807575 1 cli/start.go:509 ⋮ starting cockroach node
I201223 12:26:41.817055 101 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 12:26:41.831691 101 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 12:26:41.831708 101 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 12:26:41.831715 101 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 12:26:41.833104 101 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"05bc690ef387"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 12:26:41.833143 159 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 12:26:41.834791 101 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"05bc690ef387:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608726401834787537 cluster_name:"" sql_address:<network_field:"tcp" address_field:"05bc690ef387:26257" >›
I201223 12:26:41.839409 159 server/server.go:1419 ⋮ [n1] node connected via gossip
W201223 12:26:41.839613 217 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
W201223 12:26:41.839704 217 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 12:26:41.840072 101 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=162 GiB, used=5.1 MiB, logicalBytes=28 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=23983.00 pMax=29194827.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I201223 12:26:41.840149 101 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 12:26:41.840879 101 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 12:26:41.840900 101 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 12:26:41.840937 101 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 12:26:41.840951 101 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 12:26:41.840964 101 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 12:26:41.840972 101 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 12:26:41.840983 101 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹05bc690ef387:8080›)
I201223 12:26:41.840998 101 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 12:26:41.841010 101 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹05bc690ef387:26257›
I201223 12:26:41.859192 101 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 12:26:41.859421 101 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 12:26:41.859436 101 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 12:26:41.859541 101 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 12:26:41.859571 101 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 12:26:41.85948073 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://05bc690ef387:8080›
sql:                 ‹postgresql://root@05bc690ef387:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=05bc690ef387:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp945268062›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 12:26:41.860529 267 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 12:26:41.860975 281 jobs/job_scheduler.go:346 ⋮ [n1] waiting 3m0s before scheduled jobs daemon start
I201223 12:26:41.873511 267 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 12:26:41.873586 267 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 12:26:41.873599 267 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 12:26:41.873607 267 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 12:56:41.859353692 +0000 UTC
I201223 12:26:41.877531 282 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 12:26:41.888691 265 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹c7cbf2c00f9f41db89a757cd4e31bedf›
I201223 12:26:41.888724 265 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹c7cbf2c00f9f41db89a757cd4e31bedf›
I201223 12:26:41.896837 263 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:05bc690ef387:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608726401834787537 LocalityAddress:[] ClusterName: SQLAddress:05bc690ef387:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608726401834787537 LastUp:1608725109125503040}›
I201223 12:26:43.872944 162 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 12:26:43.874046 162 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 12:26:51.842634 63 server/status/runtime.go:522 ⋮ [n1] runtime stats: 197 MiB RSS, 214 goroutines, 22 MiB/36 MiB/45 MiB GO alloc/idle/total, 10 MiB/20 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (28x), 33 KiB/31 KiB (r/w)net
I201223 12:27:00.125784 264 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 1 expired SQL liveness sessions
I201223 12:27:01.842767 63 server/status/runtime.go:522 ⋮ [n1] runtime stats: 198 MiB RSS, 206 goroutines, 20 MiB/36 MiB/45 MiB GO alloc/idle/total, 11 MiB/20 MiB CGO alloc/total, 1.3 CGO/sec, 1.6/0.6 %(u/s)time, 0.0 %gc (1x), 997 B/816 B (r/w)net
I201223 12:27:01.845632 58 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 1M 1 ]: 1M›
I201223 12:27:01.845984 58 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   550 K       -   546 K       -       -       -       -   550 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   1.0 M       -   118 K     0 B       0     0 B       0   1.0 M       1   1.1 M       1     9.1›
‹  total         1   1.0 M       -   550 K     0 B       0     0 B       0   1.6 M       1   1.1 M       1     3.0›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2   4.3 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        21   643 K   94.3%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         0›
‹ filter         -       -   70.4%  (score == utility)›
I201223 12:27:11.842852 63 server/status/runtime.go:522 ⋮ [n1] runtime stats: 198 MiB RSS, 206 goroutines, 27 MiB/30 MiB/45 MiB GO alloc/idle/total, 11 MiB/20 MiB CGO alloc/total, 0.1 CGO/sec, 1.9/0.6 %(u/s)time, 0.0 %gc (0x), 70 B/0 B (r/w)net
I201223 12:27:21.841940 63 server/status/runtime.go:522 ⋮ [n1] runtime stats: 200 MiB RSS, 207 goroutines, 21 MiB/34 MiB/46 MiB GO alloc/idle/total, 11 MiB/20 MiB CGO alloc/total, 0.1 CGO/sec, 1.6/0.6 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
I201223 12:27:31.843018 63 server/status/runtime.go:522 ⋮ [n1] runtime stats: 200 MiB RSS, 207 goroutines, 27 MiB/30 MiB/46 MiB GO alloc/idle/total, 11 MiB/20 MiB CGO alloc/total, 0.1 CGO/sec, 0.6/0.5 %(u/s)time, 0.0 %gc (0x), 0 B/0 B (r/w)net
I201223 12:27:41.841215 59 gossip/gossip.go:568 ⋮ [n1] gossip status (ok, 1 node‹›)
gossip client (0/3 cur/max conns)
gossip server (0/3 cur/max conns, infos 0/0 sent/received, bytes 0B/0B sent/received)
gossip connectivity
  n1 [sentinel];
I201223 12:27:41.843220 63 server/status/runtime.go:522 ⋮ [n1] runtime stats: 200 MiB RSS, 207 goroutines, 19 MiB/36 MiB/47 MiB GO alloc/idle/total, 11 MiB/20 MiB CGO alloc/total, 0.1 CGO/sec, 1.5/0.3 %(u/s)time, 0.0 %gc (1x), 0 B/0 B (r/w)net
