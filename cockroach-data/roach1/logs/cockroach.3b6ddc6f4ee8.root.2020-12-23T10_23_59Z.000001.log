I201223 10:23:59.127981 1 util/log/sync_buffer.go:195 ⋮ [config] file created at: 2020/12/23 10:23:59
I201223 10:23:59.127988 1 util/log/sync_buffer.go:195 ⋮ [config] running on machine: ‹3b6ddc6f4ee8›
I201223 10:23:59.127992 1 util/log/sync_buffer.go:195 ⋮ [config] binary: CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)
I201223 10:23:59.127995 1 util/log/sync_buffer.go:195 ⋮ [config] arguments: ‹[/cockroach/cockroach start-single-node --insecure]›
I201223 10:23:59.128000 1 util/log/sync_buffer.go:195 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W201223 10:23:59.127626 1 cli/start.go:1139 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹any of your IP addresses›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I201223 10:23:59.128053 1 cli/start.go:1149 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I201223 10:23:59.128246 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
W201223 10:23:59.128261 1 cli/start.go:983 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.8 GiB).›
I201223 10:23:59.128392 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 10:23:59.128400 1 cli/start.go:1164 ⋮ ‹CockroachDB CCL v20.2.3 (x86_64-unknown-linux-gnu, built 2020/12/14 18:33:39, go1.13.14)›
I201223 10:23:59.128881 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (8.0 EiB) is unsupported, using system memory 31 GiB instead:›
I201223 10:23:59.128890 1 server/config.go:434 ⋮ system total memory: ‹31 GiB›
I201223 10:23:59.128900 1 server/config.go:436 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.8 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I201223 10:23:59.128932 1 cli/start.go:961 ⋮ using local environment variables: ‹COCKROACH_CHANNEL=official-docker›
I201223 10:23:59.128941 1 cli/start.go:968 ⋮ process identity: ‹uid 0 euid 0 gid 0 egid 0›
I201223 10:23:59.130713 1 cli/start.go:504 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I201223 10:23:59.130739 1 cli/start.go:509 ⋮ starting cockroach node
I201223 10:23:59.141308 44 server/server.go:782 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I201223 10:23:59.153140 44 server/config.go:625 ⋮ [n?] 1 storage engine‹› initialized
I201223 10:23:59.153158 44 server/config.go:628 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I201223 10:23:59.153165 44 server/config.go:628 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 1043576›
W201223 10:23:59.156087 44 cli/start.go:907 ⋮ neither --listen-addr nor --advertise-addr was specified.
The server will advertise ‹"3b6ddc6f4ee8"› to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I201223 10:23:59.156213 141 server/server.go:1416 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"a80c75e2-16e2-4e50-a3ad-eaec13a9821b"›
I201223 10:23:59.157975 44 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"3b6ddc6f4ee8:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.3" started_at:1608719039157970906 cluster_name:"" sql_address:<network_field:"tcp" address_field:"3b6ddc6f4ee8:26257" >›
I201223 10:23:59.161653 141 server/server.go:1419 ⋮ [n1] node connected via gossip
W201223 10:23:59.161715 219 kv/kvserver/replica_range_lease.go:555 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
I201223 10:23:59.161765 44 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=194 GiB, available=163 GiB, used=2.6 MiB, logicalBytes=21 MiB), ranges=36, leases=0, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=3174.00 p90=17806.00 pMax=21468977.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
W201223 10:23:59.161808 219 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I201223 10:23:59.161846 44 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I201223 10:23:59.166277 44 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I201223 10:23:59.166321 44 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I201223 10:23:59.166374 44 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/cockroach/cockroach-data/logs/goroutine_dump›
I201223 10:23:59.166395 44 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/cockroach/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I201223 10:23:59.166411 44 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I201223 10:23:59.166423 44 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/cockroach/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I201223 10:23:59.166440 44 server/server.go:1536 ⋮ [n1] starting http server at ‹[::]:8080› (use: ‹3b6ddc6f4ee8:8080›)
I201223 10:23:59.166462 44 server/server.go:1543 ⋮ [n1] starting grpc/postgres server at ‹[::]:26257›
I201223 10:23:59.166479 44 server/server.go:1544 ⋮ [n1] advertising CockroachDB node at ‹3b6ddc6f4ee8:26257›
I201223 10:23:59.184328 44 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I201223 10:23:59.188759 255 sql/temporary_schema.go:497 ⋮ [n1] running temporary object cleanup background job
I201223 10:23:59.192506 44 server/server_sql.go:753 ⋮ [n1] done ensuring all necessary migrations have run
I201223 10:23:59.192546 44 server/server.go:1876 ⋮ [n1] serving sql connections
I201223 10:23:59.192739 44 cli/start.go:670 ⋮ [config] clusterID: ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
I201223 10:23:59.193199 44 cli/start.go:680 ⋮ node startup completed:
CockroachDB node starting at 2020-12-23 10:23:59.192660911 +0000 UTC (took 0.1s)
build:               CCL v20.2.3 @ 2020/12/14 18:33:39 (go1.13.14)
webui:               ‹http://3b6ddc6f4ee8:8080›
sql:                 ‹postgresql://root@3b6ddc6f4ee8:26257?sslmode=disable›
RPC client flags:    ‹/cockroach/cockroach <client cmd> --host=3b6ddc6f4ee8:26257 --insecure›
logs:                ‹/cockroach/cockroach-data/logs›
temp dir:            ‹/cockroach/cockroach-data/cockroach-temp333531370›
external I/O path:   ‹/cockroach/cockroach-data/extern›
store[0]:            ‹path=/cockroach/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹a80c75e2-16e2-4e50-a3ad-eaec13a9821b›
nodeID:              1
I201223 10:23:59.199086 235 jobs/job_scheduler.go:346 ⋮ [n1] waiting 3m0s before scheduled jobs daemon start
I201223 10:23:59.203143 255 sql/temporary_schema.go:532 ⋮ [n1] found 0 temporary schemas
I201223 10:23:59.203165 255 sql/temporary_schema.go:535 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I201223 10:23:59.203174 255 sql/temporary_schema.go:536 ⋮ [n1] completed temporary object cleanup job
I201223 10:23:59.203183 255 sql/temporary_schema.go:614 ⋮ [n1] temporary object cleaner next scheduled to run at 2020-12-23 10:53:59.185471364 +0000 UTC
I201223 10:23:59.204475 236 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I201223 10:23:59.212394 253 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹a954df9e424a4d5abbce7652580bcb09›
I201223 10:23:59.212429 253 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹a954df9e424a4d5abbce7652580bcb09›
I201223 10:23:59.213069 251 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:3b6ddc6f4ee8:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.3 StartedAt:1608719039157970906 LocalityAddress:[] ClusterName: SQLAddress:3b6ddc6f4ee8:26257} ClusterID:a80c75e2-16e2-4e50-a3ad-eaec13a9821b StartedAt:1608719039157970906 LastUp:1608718353295687469}›
I201223 10:24:00.661599 144 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I201223 10:24:00.662412 144 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I201223 10:24:09.168478 261 server/status/runtime.go:522 ⋮ [n1] runtime stats: 204 MiB RSS, 186 goroutines, 24 MiB/33 MiB/46 MiB GO alloc/idle/total, 7.4 MiB/14 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (26x), 32 KiB/32 KiB (r/w)net
I201223 10:24:19.168599 261 server/status/runtime.go:522 ⋮ [n1] runtime stats: 204 MiB RSS, 187 goroutines, 19 MiB/37 MiB/46 MiB GO alloc/idle/total, 7.4 MiB/14 MiB CGO alloc/total, 0.1 CGO/sec, 0.9/0.9 %(u/s)time, 0.0 %gc (1x), 1.2 KiB/0 B (r/w)net
I201223 10:24:19.169226 15 kv/kvserver/store.go:2638 ⋮ [n1,s1] sstables (read amplification = 1):
‹6 [ 776K 1 ]: 776K›
I201223 10:24:19.169567 15 kv/kvserver/store.go:2639 ⋮ [n1,s1] ‹›
‹__level_____count____size___score______in__ingest(sz_cnt)____move(sz_cnt)___write(sz_cnt)____read___r-amp___w-amp›
‹    WAL         2   564 K       -   561 K       -       -       -       -   564 K       -       -       -     1.0›
‹      0         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      1         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      2         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      3         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      4         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      5         0     0 B    0.00     0 B     0 B       0     0 B       0     0 B       0     0 B       0     0.0›
‹      6         1   776 K       -    66 K     0 B       0     0 B       0   776 K       1   853 K       1    11.8›
‹  total         1   776 K       -   564 K     0 B       0     0 B       0   1.3 M       1   853 K       1     2.4›
‹  flush         0›
‹compact         1     0 B          (size == estimated-debt)›
‹ memtbl         2   2.3 M›
‹zmemtbl         0     0 B›
‹   ztbl         0     0 B›
‹ bcache        13   419 K   95.1%  (score == hit-rate)›
‹ tcache         1   616 B   99.8%  (score == hit-rate)›
‹ titers         1›
‹ filter         -       -   79.2%  (score == utility)›
I201223 10:24:21.022449 252 sql/sqlliveness/slstorage/slstorage.go:320 ⋮ [n1] deleted 4 expired SQL liveness sessions
I201223 10:24:29.168834 261 server/status/runtime.go:522 ⋮ [n1] runtime stats: 204 MiB RSS, 186 goroutines, 26 MiB/31 MiB/46 MiB GO alloc/idle/total, 7.4 MiB/14 MiB CGO alloc/total, 0.1 CGO/sec, 0.7/1.0 %(u/s)time, 0.0 %gc (0x), 70 B/0 B (r/w)net
I201223 10:24:30.296182 1 cli/start.go:733 ⋮ received signal 'terminated'
I201223 10:24:30.296841 1 cli/start.go:817 ⋮ initiating graceful shutdown of server
I201223 10:24:30.303195 1304 server/drain.go:175 ⋮ [server drain process] drain remaining: 2
I201223 10:24:30.303921 1304 server/drain.go:177 ⋮ [server drain process] drain details: descriptor leases: 1, liveness record: 1
I201223 10:24:30.510000 1304 server/drain.go:175 ⋮ [server drain process] drain remaining: 0
I201223 10:24:30.510932 1304 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W201223 10:24:30.511893 280 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
W201223 10:24:30.512146 253 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
I201223 10:24:30.517682 1 cli/start.go:869 ⋮ server drained and shutdown completed
